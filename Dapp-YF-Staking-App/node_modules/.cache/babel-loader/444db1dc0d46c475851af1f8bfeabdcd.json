{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/16036diego/Desktop/Desktop/Blockchain/DApp Udemy Course/defi-staking-app-starter/Dapp-YF-Staking-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/16036diego/Desktop/Desktop/Blockchain/DApp Udemy Course/defi-staking-app-starter/Dapp-YF-Staking-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Shape = void 0;\n\nvar Enums_1 = require(\"../../../../Enums\");\n\nvar Utils_1 = require(\"../../../../Utils\");\n\nvar Shape = /*#__PURE__*/function () {\n  function Shape() {\n    _classCallCheck(this, Shape);\n\n    this.options = {};\n    this.type = Enums_1.ShapeType.circle;\n  }\n\n  _createClass(Shape, [{\n    key: \"load\",\n    value: function load(data) {\n      var _a, _b, _c;\n\n      if (data === undefined) {\n        return;\n      }\n\n      var options = (_a = data.options) !== null && _a !== void 0 ? _a : data.custom;\n\n      if (options !== undefined) {\n        for (var shape in options) {\n          var item = options[shape];\n\n          if (item !== undefined) {\n            this.options[shape] = Utils_1.deepExtend((_b = this.options[shape]) !== null && _b !== void 0 ? _b : {}, item);\n          }\n        }\n      }\n\n      this.loadShape(data.character, Enums_1.ShapeType.character, Enums_1.ShapeType.char, true);\n      this.loadShape(data.polygon, Enums_1.ShapeType.polygon, Enums_1.ShapeType.star, false);\n      this.loadShape((_c = data.image) !== null && _c !== void 0 ? _c : data.images, Enums_1.ShapeType.image, Enums_1.ShapeType.images, true);\n\n      if (data.type !== undefined) {\n        this.type = data.type;\n      }\n    }\n  }, {\n    key: \"loadShape\",\n    value: function loadShape(item, mainKey, altKey, altOverride) {\n      var _a, _b, _c, _d;\n\n      if (item === undefined) {\n        return;\n      }\n\n      if (item instanceof Array) {\n        if (!(this.options[mainKey] instanceof Array)) {\n          this.options[mainKey] = [];\n\n          if (!this.options[altKey] || altOverride) {\n            this.options[altKey] = [];\n          }\n        }\n\n        this.options[mainKey] = Utils_1.deepExtend((_a = this.options[mainKey]) !== null && _a !== void 0 ? _a : [], item);\n\n        if (!this.options[altKey] || altOverride) {\n          this.options[altKey] = Utils_1.deepExtend((_b = this.options[altKey]) !== null && _b !== void 0 ? _b : [], item);\n        }\n      } else {\n        if (this.options[mainKey] instanceof Array) {\n          this.options[mainKey] = {};\n\n          if (!this.options[altKey] || altOverride) {\n            this.options[altKey] = {};\n          }\n        }\n\n        this.options[mainKey] = Utils_1.deepExtend((_c = this.options[mainKey]) !== null && _c !== void 0 ? _c : {}, item);\n\n        if (!this.options[altKey] || altOverride) {\n          this.options[altKey] = Utils_1.deepExtend((_d = this.options[altKey]) !== null && _d !== void 0 ? _d : {}, item);\n        }\n      }\n    }\n  }, {\n    key: \"image\",\n    get: function get() {\n      var _a;\n\n      return (_a = this.options[Enums_1.ShapeType.image]) !== null && _a !== void 0 ? _a : this.options[Enums_1.ShapeType.images];\n    },\n    set: function set(value) {\n      this.options[Enums_1.ShapeType.image] = value;\n      this.options[Enums_1.ShapeType.images] = value;\n    }\n  }, {\n    key: \"custom\",\n    get: function get() {\n      return this.options;\n    },\n    set: function set(value) {\n      this.options = value;\n    }\n  }, {\n    key: \"images\",\n    get: function get() {\n      return this.image instanceof Array ? this.image : [this.image];\n    },\n    set: function set(value) {\n      this.image = value;\n    }\n  }, {\n    key: \"stroke\",\n    get: function get() {\n      return [];\n    },\n    set: function set(_value) {}\n  }, {\n    key: \"character\",\n    get: function get() {\n      var _a;\n\n      return (_a = this.options[Enums_1.ShapeType.character]) !== null && _a !== void 0 ? _a : this.options[Enums_1.ShapeType.char];\n    },\n    set: function set(value) {\n      this.options[Enums_1.ShapeType.character] = value;\n      this.options[Enums_1.ShapeType.char] = value;\n    }\n  }, {\n    key: \"polygon\",\n    get: function get() {\n      var _a;\n\n      return (_a = this.options[Enums_1.ShapeType.polygon]) !== null && _a !== void 0 ? _a : this.options[Enums_1.ShapeType.star];\n    },\n    set: function set(value) {\n      this.options[Enums_1.ShapeType.polygon] = value;\n      this.options[Enums_1.ShapeType.star] = value;\n    }\n  }]);\n\n  return Shape;\n}();\n\nexports.Shape = Shape;","map":null,"metadata":{},"sourceType":"script"}