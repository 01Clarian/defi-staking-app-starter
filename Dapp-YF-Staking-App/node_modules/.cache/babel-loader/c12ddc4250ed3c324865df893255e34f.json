{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/16036diego/Desktop/Desktop/Blockchain/DApp Udemy Course/defi-staking-app-starter/Dapp-YF-Staking-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/16036diego/Desktop/Desktop/Blockchain/DApp Udemy Course/defi-staking-app-starter/Dapp-YF-Staking-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ParticlesOptions = void 0;\n\nvar Links_1 = require(\"./Links/Links\");\n\nvar Move_1 = require(\"./Move/Move\");\n\nvar ParticlesNumber_1 = require(\"./Number/ParticlesNumber\");\n\nvar Opacity_1 = require(\"./Opacity/Opacity\");\n\nvar Shape_1 = require(\"./Shape/Shape\");\n\nvar Size_1 = require(\"./Size/Size\");\n\nvar Rotate_1 = require(\"./Rotate/Rotate\");\n\nvar Shadow_1 = require(\"./Shadow\");\n\nvar Stroke_1 = require(\"./Stroke\");\n\nvar Collisions_1 = require(\"./Collisions/Collisions\");\n\nvar Twinkle_1 = require(\"./Twinkle/Twinkle\");\n\nvar AnimatableColor_1 = require(\"./AnimatableColor\");\n\nvar Life_1 = require(\"./Life/Life\");\n\nvar Bounce_1 = require(\"./Bounce/Bounce\");\n\nvar Destroy_1 = require(\"./Destroy/Destroy\");\n\nvar Wobble_1 = require(\"./Wobble/Wobble\");\n\nvar Tilt_1 = require(\"./Tilt/Tilt\");\n\nvar Roll_1 = require(\"./Roll/Roll\");\n\nvar ZIndex_1 = require(\"./ZIndex/ZIndex\");\n\nvar Utils_1 = require(\"../../../Utils\");\n\nvar ParticlesOptions = /*#__PURE__*/function () {\n  function ParticlesOptions() {\n    _classCallCheck(this, ParticlesOptions);\n\n    this.bounce = new Bounce_1.Bounce();\n    this.collisions = new Collisions_1.Collisions();\n    this.color = new AnimatableColor_1.AnimatableColor();\n    this.destroy = new Destroy_1.Destroy();\n    this.groups = {};\n    this.life = new Life_1.Life();\n    this.links = new Links_1.Links();\n    this.move = new Move_1.Move();\n    this.number = new ParticlesNumber_1.ParticlesNumber();\n    this.opacity = new Opacity_1.Opacity();\n    this.reduceDuplicates = false;\n    this.roll = new Roll_1.Roll();\n    this.rotate = new Rotate_1.Rotate();\n    this.shadow = new Shadow_1.Shadow();\n    this.shape = new Shape_1.Shape();\n    this.size = new Size_1.Size();\n    this.stroke = new Stroke_1.Stroke();\n    this.tilt = new Tilt_1.Tilt();\n    this.twinkle = new Twinkle_1.Twinkle();\n    this.wobble = new Wobble_1.Wobble();\n    this.zIndex = new ZIndex_1.ZIndex();\n  }\n\n  _createClass(ParticlesOptions, [{\n    key: \"load\",\n    value: function load(data) {\n      var _a, _b, _c, _d, _e, _f, _g, _h;\n\n      if (data === undefined) {\n        return;\n      }\n\n      this.bounce.load(data.bounce);\n      this.color = AnimatableColor_1.AnimatableColor.create(this.color, data.color);\n      this.destroy.load(data.destroy);\n      this.life.load(data.life);\n      var links = (_b = (_a = data.links) !== null && _a !== void 0 ? _a : data.lineLinked) !== null && _b !== void 0 ? _b : data.line_linked;\n\n      if (links !== undefined) {\n        this.links.load(links);\n      }\n\n      if (data.groups !== undefined) {\n        for (var group in data.groups) {\n          var item = data.groups[group];\n\n          if (item !== undefined) {\n            this.groups[group] = Utils_1.deepExtend((_c = this.groups[group]) !== null && _c !== void 0 ? _c : {}, item);\n          }\n        }\n      }\n\n      this.move.load(data.move);\n      this.number.load(data.number);\n      this.opacity.load(data.opacity);\n\n      if (data.reduceDuplicates !== undefined) {\n        this.reduceDuplicates = data.reduceDuplicates;\n      }\n\n      this.roll.load(data.roll);\n      this.rotate.load(data.rotate);\n      this.shape.load(data.shape);\n      this.size.load(data.size);\n      this.shadow.load(data.shadow);\n      this.tilt.load(data.tilt);\n      this.twinkle.load(data.twinkle);\n      this.wobble.load(data.wobble);\n      this.zIndex.load(data.zIndex);\n      var collisions = (_e = (_d = data.move) === null || _d === void 0 ? void 0 : _d.collisions) !== null && _e !== void 0 ? _e : (_f = data.move) === null || _f === void 0 ? void 0 : _f.bounce;\n\n      if (collisions !== undefined) {\n        this.collisions.enable = collisions;\n      }\n\n      this.collisions.load(data.collisions);\n      var strokeToLoad = (_g = data.stroke) !== null && _g !== void 0 ? _g : (_h = data.shape) === null || _h === void 0 ? void 0 : _h.stroke;\n\n      if (strokeToLoad === undefined) {\n        return;\n      }\n\n      if (strokeToLoad instanceof Array) {\n        this.stroke = strokeToLoad.map(function (s) {\n          var tmp = new Stroke_1.Stroke();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        if (this.stroke instanceof Array) {\n          this.stroke = new Stroke_1.Stroke();\n        }\n\n        this.stroke.load(strokeToLoad);\n      }\n    }\n  }, {\n    key: \"line_linked\",\n    get: function get() {\n      return this.links;\n    },\n    set: function set(value) {\n      this.links = value;\n    }\n  }, {\n    key: \"lineLinked\",\n    get: function get() {\n      return this.links;\n    },\n    set: function set(value) {\n      this.links = value;\n    }\n  }]);\n\n  return ParticlesOptions;\n}();\n\nexports.ParticlesOptions = ParticlesOptions;","map":null,"metadata":{},"sourceType":"script"}