{"ast":null,"code":"import _regeneratorRuntime from \"/Users/16036diego/Desktop/Desktop/DApp Udemy Course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/16036diego/Desktop/Desktop/DApp Udemy Course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/16036diego/Desktop/Desktop/DApp Udemy Course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/16036diego/Desktop/Desktop/DApp Udemy Course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/16036diego/Desktop/Desktop/DApp Udemy Course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/16036diego/Desktop/Desktop/DApp Udemy Course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/16036diego/Desktop/Desktop/DApp Udemy Course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/16036diego/Desktop/Desktop/DApp Udemy Course/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js\";\n// The main file where we will be creating the mothership output for ui\nimport React, { Component } from \"react\";\nimport './App.css';\nimport Navbar from './Navbar.js';\nimport _Web from \"web3\";\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"Web3\",\n    value: function () {\n      var _Web2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context.next = 6;\n                  break;\n                }\n\n                window.web3 = new _Web(window.ethereum);\n                _context.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context.next = 7;\n                break;\n\n              case 6:\n                if (window.ethereum) {\n                  window.web3 = new _Web(window.ethereum.currentProvider);\n                } else {\n                  window.alert('');\n                }\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function Web3() {\n        return _Web2.apply(this, arguments);\n      }\n\n      return Web3;\n    }() //Props is a special feature in react where we cna pass through special proterties,\n    //In our case we want to begin to integrate metamask with the web application\n\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '0x0' //we're initializing our state that is changing (the account numbers)\n\n    };\n    return _this;\n  } //All React code Goes in here\n\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      //renders to the web page\n      return (\n        /*#__PURE__*/\n        //Divs are containers that allow us to put html, and css\n        React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Navbar, {\n          account: this.state.account,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"h\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }\n        })))\n      );\n    }\n  }]);\n\n  return App;\n}(Component);\n/*\nWhat is CSS? \n    - Cascading Style Sheets, it Styles the websites (colors, fonts)\n    - className and boostrap are CSS\nWhat is HTML?\n    - HTML is the markup language for writing basic text and website things\nHow does JS play into all this?\n\n    - JS allows the websites to be dynamic \n*/\n\n\nexport default App;","map":{"version":3,"sources":["/Users/16036diego/Desktop/Desktop/DApp Udemy Course/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js"],"names":["React","Component","Navbar","Web3","App","window","ethereum","web3","enable","currentProvider","alert","props","state","account"],"mappings":";;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;IAEMC,G;;;;;;;;;;;qBAGMC,MAAM,CAACC,Q;;;;;AACPD,gBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIJ,IAAJ,CAASE,MAAM,CAACC,QAAhB,CAAd;;uBACMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,E;;;;;;;AACH,oBAAIH,MAAM,CAACC,QAAX,EAAqB;AACpBD,kBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIJ,IAAJ,CAASE,MAAM,CAACC,QAAP,CAAgBG,eAAzB,CAAd;AACP,iBAFM,MAEA;AACHJ,kBAAAA,MAAM,CAACK,KAAP,CAAa,EAAb;AACH;;;;;;;;;;;;;;;QAIL;AACA;;;;AACA,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,KADA,CACM;;AADN,KAAb;AAFc;AAKjB,G,CAID;;;;;6BACS;AAAE;AACX;AAAA;AACI;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAI,KAAKD,KAAL,CAAWC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,eAEI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,CAFJ;AAFJ;AAUC;;;;EArCaZ,S;AAuClB;;;;;;;;;;;;AAUA,eAAeG,GAAf","sourcesContent":["// The main file where we will be creating the mothership output for ui\nimport React, {Component} from \"react\";\nimport './App.css'\nimport Navbar from './Navbar.js';\nimport Web3 from \"web3\";\n\nclass App extends Component {\n\n    async Web3(){\n        if (window.ethereum){\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        } else if (window.ethereum) {\n                window.web3 = new Web3(window.ethereum.currentProvider)\n        } else {\n            window.alert('')\n        }   \n    }\n    \n\n    //Props is a special feature in react where we cna pass through special proterties,\n    //In our case we want to begin to integrate metamask with the web application\n    constructor(props){\n        super(props)\n        this.state = {\n            account: '0x0' //we're initializing our state that is changing (the account numbers)\n        }\n    }\n\n\n\n    //All React code Goes in here\n    render() { //renders to the web page\n    return ( \n        //Divs are containers that allow us to put html, and css\n        <div>\n            <Navbar account = {this.state.account}/>\n            <div className=\"text-center\" > \n            <h>\n            </h>\n            </div>\n        </div>\n        )\n    }    \n}\n/*\nWhat is CSS? \n    - Cascading Style Sheets, it Styles the websites (colors, fonts)\n    - className and boostrap are CSS\nWhat is HTML?\n    - HTML is the markup language for writing basic text and website things\nHow does JS play into all this?\n\n    - JS allows the websites to be dynamic \n*/\nexport default App;"]},"metadata":{},"sourceType":"module"}