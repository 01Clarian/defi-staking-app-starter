{"ast":null,"code":"import _regeneratorRuntime from \"/Users/16036diego/Desktop/Desktop/DApp Udemy Course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/16036diego/Desktop/Desktop/DApp Udemy Course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/16036diego/Desktop/Desktop/DApp Udemy Course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/16036diego/Desktop/Desktop/DApp Udemy Course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/16036diego/Desktop/Desktop/DApp Udemy Course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/16036diego/Desktop/Desktop/DApp Udemy Course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/16036diego/Desktop/Desktop/DApp Udemy Course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/16036diego/Desktop/Desktop/DApp Udemy Course/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js\";\n// The main file where we will be creating the mothership output for ui\nimport React, { Component } from \"react\";\nimport './App.css';\nimport Navbar from './Navbar.js';\nimport Web3 from \"web3\";\nimport Tether from '../truffle_abis/Tether.json';\nimport RWD from '../truffle_abis/RWD.json';\nimport DecentralBank from '../truffle_abis/DecentralBank.json';\nimport Main from \"./Main.js\";\nimport ParticleSettings from \"./ParticleSettings.js\";\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function () {\n      var _UNSAFE_componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function UNSAFE_componentWillMount() {\n        return _UNSAFE_componentWillMount.apply(this, arguments);\n      }\n\n      return UNSAFE_componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                console.log(window.web3);\n                _context2.next = 5;\n                return window.ethereum.enable();\n\n              case 5:\n                _context2.next = 8;\n                break;\n\n              case 7:\n                if (window.ethereum) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('No Eth browser detected, check metamask');\n                }\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, account, newtworkId, tetherData, tether, tetherBalance, rwdData, rwd, rwdBalance, decentralBankData, decentralBank, stakingBalance;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                account = _context3.sent;\n                console.log(web3.eth.getAccounts());\n                this.setState({\n                  account: account[0]\n                });\n                _context3.next = 8;\n                return web3.eth.net.getId();\n\n              case 8:\n                newtworkId = _context3.sent;\n                //Load Tether Contract\n                tetherData = Tether.networks[newtworkId];\n\n                if (!tetherData) {\n                  _context3.next = 20;\n                  break;\n                }\n\n                tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n                this.setState({\n                  tether: tether\n                });\n                _context3.next = 15;\n                return tether.methods.balanceOf(this.state.account).call();\n\n              case 15:\n                tetherBalance = _context3.sent;\n                this.setState({\n                  tetherBalance: tetherBalance.toString()\n                });\n                console.log({\n                  balance: tetherBalance\n                });\n                _context3.next = 21;\n                break;\n\n              case 20:\n                window.alert('Error! Tether contract not deployed - no detect network!');\n\n              case 21:\n                //Load RWD Data\n                rwdData = RWD.networks[newtworkId];\n\n                if (!rwdData) {\n                  _context3.next = 32;\n                  break;\n                }\n\n                rwd = new web3.eth.Contract(RWD.abi, rwdData.address);\n                this.setState({\n                  rwd: rwd\n                });\n                _context3.next = 27;\n                return rwd.methods.balanceOf(this.state.account).call();\n\n              case 27:\n                rwdBalance = _context3.sent;\n                // I need to read web3 docs\n                this.setState({\n                  rwdBalance: rwdBalance.toString()\n                });\n                console.log({\n                  rwdbalance: rwdBalance.toString()\n                });\n                _context3.next = 33;\n                break;\n\n              case 32:\n                window.alert('Error! Reward Token CONTRACT NOT DEPLOYED');\n\n              case 33:\n                //Load DecentralBank Data\n                decentralBankData = DecentralBank.networks[newtworkId];\n\n                if (!decentralBankData) {\n                  _context3.next = 44;\n                  break;\n                }\n\n                decentralBank = new web3.eth.Contract(DecentralBank.abi, decentralBankData.address);\n                this.setState({\n                  decentralBank: decentralBank\n                });\n                _context3.next = 39;\n                return decentralBank.methods.stakingBalance(this.state.account).call();\n\n              case 39:\n                stakingBalance = _context3.sent;\n                // I need to read web3 docs\n                this.setState({\n                  stakingBalance: stakingBalance.toString()\n                });\n                console.log({\n                  stakingBalance: stakingBalance.toString()\n                });\n                _context3.next = 45;\n                break;\n\n              case 44:\n                window.alert('Error! DECENTRAL BANK CONTRACT NOT DEPLOYED');\n\n              case 45:\n                this.setState({\n                  loading: false\n                }); //Change the state of loading data once we've loaded all data\n\n              case 46:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }() //End Async for loading blockchain data \n    //Staking Functionality Pre-face\n    //twoFunctions, One that stakes and one that unstakes\n    //Leveraging two tokens in our decentral bank contract, deposit and unstaking tokens\n    //Staking Function, access decentral bank, deposit tokens and access the transaction hash\n    //function to approve transaction\n    //deposit tokens is TransferFrom functionality \n\n  }]);\n\n  //Props is a special feature in react where we cna pass through special proterties,\n  //In our case we want to begin to integrate metamask with the web application\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.stakeTokens = function (amount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.tether.methods.approve(_this.state.decentralBank._address, amount).send({\n        from: _this.state.account\n      }).on('transactionHash', function (hash) {\n        _this.state.decentralBank.methods.depositTokens(amount).send({\n          from: _this.state.account\n        }).on('transactionHash', function (hash) {\n          _this.setState({\n            loading: false\n          });\n        });\n      });\n    };\n\n    _this.unstakeTokens = function () {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.decentralBank.methods.unstakeTokens().send({\n        from: _this.state.account\n      }).on('transactionHash', function (hash) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.issueRWDTokens = function () {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.decentralBank.methods.issueToken().send({\n        from: _this.state.account\n      }).on('transactionHash', function (hash) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.state = {\n      account: '0x0',\n      //we're initializing our state that is changing (the account numbers)\n      tether: {},\n      rwd: {},\n      decentralBank: {},\n      tetherBalance: '0',\n      rwdBalance: '0',\n      stakingBalance: '0',\n      loading: true\n    };\n    return _this;\n  } //All React code Goes in here\n\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      //renders to the web page\n      var content;\n      {\n        this.state.loading ? content = /*#__PURE__*/React.createElement(\"p\", {\n          id: \"loader\",\n          className: \"text-center\",\n          style: {\n            margin: '30px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 9\n          }\n        }, \"LOADING...\") : content = /*#__PURE__*/React.createElement(Main, {\n          tetherBalance: this.state.tetherBalance,\n          rwdBalance: this.state.rwdBalance,\n          stakingBalance: this.state.stakingBalance,\n          stakeTokens: this.stakeTokens,\n          unstakeTokens: this.unstakeTokens,\n          issueRWDTokens: this.issueRWDTokens,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 9\n          }\n        });\n      }\n      return (\n        /*#__PURE__*/\n        //Divs are containers that allow us to put html, and css\n        React.createElement(\"div\", {\n          className: \"App\",\n          style: {\n            position: 'relative'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            position: 'absolute'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(ParticleSettings, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }\n        })), /*#__PURE__*/React.createElement(Navbar, {\n          account: this.state.account,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"container-fluid mt-5\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"main\", {\n          role: \"main\",\n          className: \"col-lg-12 ml-auto mr-auto\",\n          style: {\n            maxWidth: '600px',\n            minHeight: '100vm'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }\n        }, content))), console.log(this.state.loading)))\n      );\n    }\n  }]);\n\n  return App;\n}(Component);\n/*\nWhat is CSS? \n    - Cascading Style Sheets, it Styles the websites (colors, fonts)\n    - className and boostrap are CSS\nWhat is HTML?\n    - HTML is the markup language for writing basic text and website things\nHow does JS play into all this?\n\n    - JS allows the websites to be dynamic \n*/\n\n\nexport default App;","map":{"version":3,"sources":["/Users/16036diego/Desktop/Desktop/DApp Udemy Course/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js"],"names":["React","Component","Navbar","Web3","Tether","RWD","DecentralBank","Main","ParticleSettings","App","loadWeb3","loadBlockchainData","window","ethereum","web3","console","log","enable","currentProvider","alert","eth","getAccounts","account","setState","net","getId","newtworkId","tetherData","networks","tether","Contract","abi","address","methods","balanceOf","state","call","tetherBalance","toString","balance","rwdData","rwd","rwdBalance","rwdbalance","decentralBankData","decentralBank","stakingBalance","loading","props","stakeTokens","amount","approve","_address","send","from","on","hash","depositTokens","unstakeTokens","issueRWDTokens","issueToken","content","margin","position","maxWidth","minHeight"],"mappings":"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","sourcesContent":["// The main file where we will be creating the mothership output for ui\nimport React, {Component} from \"react\";\nimport './App.css'\nimport Navbar from './Navbar.js';\nimport Web3 from \"web3\";\nimport Tether from '../truffle_abis/Tether.json'\nimport RWD from '../truffle_abis/RWD.json'\nimport DecentralBank from '../truffle_abis/DecentralBank.json'\nimport Main from \"./Main.js\";\nimport ParticleSettings from \"./ParticleSettings.js\"\n\nclass App extends Component {\n\n    async UNSAFE_componentWillMount() {\n        await this.loadWeb3()\n        await this.loadBlockchainData()\n    }\n\n\n    async loadWeb3(){ // This function connects the app to the blockchain, these steps are provided by metamask\n        if (window.ethereum){\n            window.web3 = new Web3(window.ethereum)\n            console.log(window.web3)\n            await window.ethereum.enable()\n        } else if (window.ethereum) {\n                window.web3 = new Web3(window.web3.currentProvider)\n        } else {\n            window.alert('No Eth browser detected, check metamask')\n        }   \n    }\n\n    async loadBlockchainData() {\n        const web3 = window.web3\n        const account = await web3.eth.getAccounts();\n        console.log(web3.eth.getAccounts())\n        this.setState({account:account[0]});\n        const newtworkId = await web3.eth.net.getId();\n\n        //Load Tether Contract\n        const tetherData = Tether.networks[newtworkId];\n        if(tetherData){\n            const tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n            this.setState({tether});\n            let tetherBalance = await tether.methods.balanceOf(this.state.account).call();\n            this.setState({tetherBalance: tetherBalance.toString()});\n            console.log({balance:tetherBalance});\n        } else {\n            window.alert('Error! Tether contract not deployed - no detect network!');\n        }\n\n        //Load RWD Data\n        const rwdData = RWD.networks[newtworkId];\n        if(rwdData){\n            const rwd = new web3.eth.Contract(RWD.abi, rwdData.address);\n            this.setState({rwd});\n            let rwdBalance = await rwd.methods.balanceOf(this.state.account).call(); \n            // I need to read web3 docs\n            this.setState({rwdBalance: rwdBalance.toString()});\n            console.log({rwdbalance:rwdBalance.toString()});\n        } else { \n            window.alert('Error! Reward Token CONTRACT NOT DEPLOYED');\n        }\n\n        //Load DecentralBank Data\n        const decentralBankData = DecentralBank.networks[newtworkId];\n        if(decentralBankData){\n            const decentralBank = new web3.eth.Contract(DecentralBank.abi, decentralBankData.address);\n            this.setState({decentralBank});\n            let stakingBalance = await decentralBank.methods.stakingBalance(this.state.account).call(); \n            // I need to read web3 docs\n            this.setState({stakingBalance: stakingBalance.toString()});\n            console.log({stakingBalance: stakingBalance.toString()});\n        } else {\n            window.alert('Error! DECENTRAL BANK CONTRACT NOT DEPLOYED');\n        }\n\n\n        this.setState({loading:false}); \n        //Change the state of loading data once we've loaded all data\n    } //End Async for loading blockchain data \n    \n    \n    //Staking Functionality Pre-face\n    //twoFunctions, One that stakes and one that unstakes\n    //Leveraging two tokens in our decentral bank contract, deposit and unstaking tokens\n    //Staking Function, access decentral bank, deposit tokens and access the transaction hash\n    //function to approve transaction\n    //deposit tokens is TransferFrom functionality \n    stakeTokens = (amount) => {\n        this.setState({loading:true});\n        this.state.tether.methods.approve(this.state.decentralBank._address, amount).send({from: this.state.account}).on('transactionHash', (hash) => {\n        this.state.decentralBank.methods.depositTokens(amount).send({from: this.state.account}).on('transactionHash', (hash) =>{\n            this.setState({loading: false});\n        });\n    });\n    }\n    \n    //Unstake Token function\n    unstakeTokens = () => {\n        this.setState({loading:true})\n        this.state.decentralBank.methods.unstakeTokens().send({from: this.state.account}).on('transactionHash', (hash) =>{\n            this.setState({loading: false});\n        });\n    }\n\n    //Issue Reward Tokens \n    issueRWDTokens = () => {\n        this.setState({loading:true})\n        this.state.decentralBank.methods.issueToken().send({from: this.state.account}).on('transactionHash', (hash) => {\n            this.setState({loading:false});\n        });\n    } \n\n    //Props is a special feature in react where we cna pass through special proterties,\n    //In our case we want to begin to integrate metamask with the web application\n    constructor(props){\n        super(props)\n        this.state = {\n            account: '0x0', //we're initializing our state that is changing (the account numbers)\n            tether: {},\n            rwd: {},\n            decentralBank:{},\n            tetherBalance: '0',\n            rwdBalance: '0',\n            stakingBalance: '0',\n            loading: true\n        }\n    }\n\n\n\n    //All React code Goes in here\n    render() { //renders to the web page\n        let content\n        {this.state.loading ? content = \n        <p \n        id='loader' \n        className=\"text-center\" \n        style ={{margin:'30px'}}>\n             LOADING...\n        </p> : content=\n        <\n            Main\n            tetherBalance = {this.state.tetherBalance}\n            rwdBalance = {this.state.rwdBalance}\n            stakingBalance = {this.state.stakingBalance}\n            stakeTokens={this.stakeTokens}\n            unstakeTokens = {this.unstakeTokens}\n            issueRWDTokens = {this.issueRWDTokens}\n            />}\n        \n    return ( \n        //Divs are containers that allow us to put html, and css\n        <div className=\"App\" style={{position: 'relative'}}>\n            <div style={{position:'absolute'}}>\n            <ParticleSettings/>\n            </div>\n\n            <Navbar account = {this.state.account}/>\n            <div className=\"container-fluid mt-5\"> \n                <div className=\"row\">\n                    <main role='main' className=\"col-lg-12 ml-auto mr-auto\" style ={{maxWidth:'600px', minHeight:'100vm'}}>\n                        <div>\n                            {content}\n                        </div>\n\n                    </main>\n                </div>\n                {console.log(this.state.loading)}\n            </div>\n        </div>\n        )\n    }    \n}\n/*\nWhat is CSS? \n    - Cascading Style Sheets, it Styles the websites (colors, fonts)\n    - className and boostrap are CSS\nWhat is HTML?\n    - HTML is the markup language for writing basic text and website things\nHow does JS play into all this?\n\n    - JS allows the websites to be dynamic \n*/\nexport default App;"]},"metadata":{},"sourceType":"module"}