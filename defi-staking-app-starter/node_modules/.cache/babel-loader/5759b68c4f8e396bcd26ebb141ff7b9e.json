{"ast":null,"code":"import _regeneratorRuntime from \"/Users/16036diego/Desktop/Desktop/DApp Udemy Course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/16036diego/Desktop/Desktop/DApp Udemy Course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/16036diego/Desktop/Desktop/DApp Udemy Course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/16036diego/Desktop/Desktop/DApp Udemy Course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/16036diego/Desktop/Desktop/DApp Udemy Course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/16036diego/Desktop/Desktop/DApp Udemy Course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/16036diego/Desktop/Desktop/DApp Udemy Course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/16036diego/Desktop/Desktop/DApp Udemy Course/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js\";\n// The main file where we will be creating the mothership output for ui\nimport React, { Component } from \"react\";\nimport './App.css';\nimport Navbar from './Navbar.js';\nimport Web3 from \"web3\";\nimport Tether from '../truffle_abis/Tether.json';\nimport RWD from '../truffle_abis/RWD.json';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function () {\n      var _UNSAFE_componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function UNSAFE_componentWillMount() {\n        return _UNSAFE_componentWillMount.apply(this, arguments);\n      }\n\n      return UNSAFE_componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.ethereum) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('No Eth browser detected, check metamask');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, account, newtworkId, tetherData, tether, tetherBalance, rwdData, rwd, rwdBalance;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                account = _context3.sent;\n                this.setState({\n                  account: account[0]\n                });\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                newtworkId = _context3.sent;\n                //Load Tether Contract\n                tetherData = Tether.networks[newtworkId];\n\n                if (!tetherData) {\n                  _context3.next = 19;\n                  break;\n                }\n\n                tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n                this.setState({\n                  tether: tether\n                });\n                _context3.next = 14;\n                return tether.methods.balanceOf(this.state.account).call();\n\n              case 14:\n                tetherBalance = _context3.sent;\n                this.setState({\n                  tetherBalance: tetherBalance.toString()\n                });\n                console.log({\n                  balance: tetherBalance\n                });\n                _context3.next = 20;\n                break;\n\n              case 19:\n                window.alert('Error! Tether contract not deployed - no detect network!');\n\n              case 20:\n                rwdData = RWD.networks[newtworkId];\n\n                if (!rwdData) {\n                  _context3.next = 31;\n                  break;\n                }\n\n                rwd = new web3.eth.Contract(RWD.abi, rwdData.address);\n                this.setState({\n                  rwd: rwd\n                });\n                _context3.next = 26;\n                return rwd.methods.balanceOf(this.state.account).call();\n\n              case 26:\n                rwdBalance = _context3.sent;\n                // I need to read web3 docs\n                this.setState({\n                  rwdBalance: rwdBalance.toString()\n                });\n                console.log({\n                  balance: rwdBalance.toString()\n                });\n                _context3.next = 32;\n                break;\n\n              case 31:\n                window.alert('Error! RWD CONTRACT NOT DEPLOYED');\n\n              case 32:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }() //Props is a special feature in react where we cna pass through special proterties,\n    //In our case we want to begin to integrate metamask with the web application\n\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '0x0',\n      //we're initializing our state that is changing (the account numbers)\n      tether: {},\n      rwd: {},\n      decentralBank: {},\n      tetherBalance: '0',\n      rwdBalance: '0',\n      stakingBalance: '0',\n      loading: true\n    };\n    return _this;\n  } //All React code Goes in here\n\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      //renders to the web page\n      return (\n        /*#__PURE__*/\n        //Divs are containers that allow us to put html, and css\n        React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Navbar, {\n          account: this.state.account,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"h\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }\n        })))\n      );\n    }\n  }]);\n\n  return App;\n}(Component);\n/*\nWhat is CSS? \n    - Cascading Style Sheets, it Styles the websites (colors, fonts)\n    - className and boostrap are CSS\nWhat is HTML?\n    - HTML is the markup language for writing basic text and website things\nHow does JS play into all this?\n\n    - JS allows the websites to be dynamic \n*/\n\n\nexport default App;","map":{"version":3,"sources":["/Users/16036diego/Desktop/Desktop/DApp Udemy Course/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js"],"names":["React","Component","Navbar","Web3","Tether","RWD","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","account","setState","net","getId","newtworkId","tetherData","networks","tether","Contract","abi","address","methods","balanceOf","state","call","tetherBalance","toString","console","log","balance","rwdData","rwd","rwdBalance","props","decentralBank","stakingBalance","loading"],"mappings":"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","sourcesContent":["// The main file where we will be creating the mothership output for ui\nimport React, {Component} from \"react\";\nimport './App.css'\nimport Navbar from './Navbar.js';\nimport Web3 from \"web3\";\nimport Tether from '../truffle_abis/Tether.json'\nimport RWD from '../truffle_abis/RWD.json'\n\nclass App extends Component {\n\n    async UNSAFE_componentWillMount() {\n        await this.loadWeb3()\n        await this.loadBlockchainData()\n    }\n\n\n    async loadWeb3(){ // This function connects the app to the blockchain, these steps are provided by metamask\n        if (window.ethereum){\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        } else if (window.ethereum) {\n                window.web3 = new Web3(window.web3.currentProvider)\n        } else {\n            window.alert('No Eth browser detected, check metamask')\n        }   \n    }\n\n    async loadBlockchainData() {\n        const web3 = window.web3\n        const account = await web3.eth.getAccounts()\n        this.setState({account:account[0]})\n        const newtworkId = await web3.eth.net.getId()\n\n        //Load Tether Contract\n        const tetherData = Tether.networks[newtworkId]\n        if(tetherData){\n            const tether = new web3.eth.Contract(Tether.abi, tetherData.address)\n            this.setState({tether})\n            let tetherBalance = await tether.methods.balanceOf(this.state.account).call()\n            this.setState({tetherBalance: tetherBalance.toString()})\n            console.log({balance:tetherBalance})\n        } else {\n            window.alert('Error! Tether contract not deployed - no detect network!')\n        }\n\n        const rwdData = RWD.networks[newtworkId]\n        if(rwdData){\n            const rwd = new web3.eth.Contract(RWD.abi, rwdData.address)\n            this.setState({rwd})\n            let rwdBalance = await rwd.methods.balanceOf(this.state.account).call() \n            // I need to read web3 docs\n            this.setState({rwdBalance: rwdBalance.toString()})\n            console.log({balance:rwdBalance.toString()})\n        } else {\n            window.alert('Error! RWD CONTRACT NOT DEPLOYED')\n        }\n\n    }\n    \n\n    //Props is a special feature in react where we cna pass through special proterties,\n    //In our case we want to begin to integrate metamask with the web application\n    constructor(props){\n        super(props)\n        this.state = {\n            account: '0x0', //we're initializing our state that is changing (the account numbers)\n            tether: {},\n            rwd: {},\n            decentralBank:{},\n            tetherBalance: '0',\n            rwdBalance: '0',\n            stakingBalance: '0',\n            loading: true\n        }\n    }\n\n\n\n    //All React code Goes in here\n    render() { //renders to the web page\n    return ( \n        //Divs are containers that allow us to put html, and css\n        <div>\n            <Navbar account = {this.state.account}/>\n            <div className=\"text-center\" > \n            <h>\n            </h>\n            </div>\n        </div>\n        )\n    }    \n}\n/*\nWhat is CSS? \n    - Cascading Style Sheets, it Styles the websites (colors, fonts)\n    - className and boostrap are CSS\nWhat is HTML?\n    - HTML is the markup language for writing basic text and website things\nHow does JS play into all this?\n\n    - JS allows the websites to be dynamic \n*/\nexport default App;"]},"metadata":{},"sourceType":"module"}